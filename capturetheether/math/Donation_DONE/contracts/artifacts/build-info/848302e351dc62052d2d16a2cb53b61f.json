{
	"id": "848302e351dc62052d2d16a2cb53b61f",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.4.26",
	"solcLongVersion": "0.4.26+commit.4563c3fc",
	"input": {
		"language": "Solidity",
		"sources": {
			"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol": {
				"content": "pragma solidity ^0.4.21;\n\ncontract DonationChallenge {\n    struct Donation {\n        uint256 timestamp;\n        uint256 etherAmount;\n    }\n    Donation[] public donations;\n\n    address public owner;\n\n    function DonationChallenge() public payable {\n        require(msg.value == 1 ether);\n        \n        owner = msg.sender;\n    }\n    \n    function isComplete() public view returns (bool) {\n        return address(this).balance == 0;\n    }\n\n    function donate(uint256 etherAmount) public payable {\n        // amount is in ether, but msg.value is in wei\n        uint256 scale = 10**18 * 1 ether;\n        require(msg.value == etherAmount / scale);\n\n        Donation donation;\n        donation.timestamp = now;\n        donation.etherAmount = etherAmount;\n\n        donations.push(donation);\n    }\n\n    function withdraw() public {\n        require(msg.sender == owner);\n        \n        msg.sender.transfer(address(this).balance);\n    }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol": {
				"DonationChallenge": {
					"abi": [
						{
							"constant": false,
							"inputs": [],
							"name": "withdraw",
							"outputs": [],
							"payable": false,
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"name": "",
									"type": "address"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [],
							"name": "isComplete",
							"outputs": [
								{
									"name": "",
									"type": "bool"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"constant": false,
							"inputs": [
								{
									"name": "etherAmount",
									"type": "uint256"
								}
							],
							"name": "donate",
							"outputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"constant": true,
							"inputs": [
								{
									"name": "",
									"type": "uint256"
								}
							],
							"name": "donations",
							"outputs": [
								{
									"name": "timestamp",
									"type": "uint256"
								},
								{
									"name": "etherAmount",
									"type": "uint256"
								}
							],
							"payable": false,
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"payable": true,
							"stateMutability": "payable",
							"type": "constructor"
						}
					],
					"devdoc": {
						"methods": {}
					},
					"evm": {
						"assembly": "    /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":26:935  contract DonationChallenge {... */\n  mstore(0x40, 0x80)\n    /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":279:286  1 ether */\n  0xde0b6b3a7640000\n    /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":266:275  msg.value */\n  callvalue\n    /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":266:286  msg.value == 1 ether */\n  eq\n    /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":258:287  require(msg.value == 1 ether) */\n  iszero\n  iszero\n  tag_3\n  jumpi\n  0x0\n  dup1\n  revert\ntag_3:\n    /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":314:324  msg.sender */\n  caller\n    /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":306:311  owner */\n  0x1\n  0x0\n    /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":306:324  owner = msg.sender */\n  0x100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":26:935  contract DonationChallenge {... */\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x0\n  codecopy\n  0x0\n  return\nstop\n\nsub_0: assembly {\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":26:935  contract DonationChallenge {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x4))\n      calldataload(0x0)\n      0x100000000000000000000000000000000000000000000000000000000\n      swap1\n      div\n      0xffffffff\n      and\n      dup1\n      0x3ccfd60b\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xb2fa1c9e\n      eq\n      tag_4\n      jumpi\n      dup1\n      0xf14faf6f\n      eq\n      tag_5\n      jumpi\n      dup1\n      0xf8626af8\n      eq\n      tag_6\n      jumpi\n    tag_1:\n      0x0\n      dup1\n      revert\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":800:933  function withdraw() public {... */\n    tag_2:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_7\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_7:\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":800:933  function withdraw() public {... */\n      pop\n      tag_8\n      jump(tag_9)\n    tag_8:\n      stop\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":177:197  address public owner */\n    tag_3:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_10\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_10:\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":177:197  address public owner */\n      pop\n      tag_11\n      jump(tag_12)\n    tag_11:\n      mload(0x40)\n      dup1\n      dup3\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":341:440  function isComplete() public view returns (bool) {... */\n    tag_4:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_13\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_13:\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":341:440  function isComplete() public view returns (bool) {... */\n      pop\n      tag_14\n      jump(tag_15)\n    tag_14:\n      mload(0x40)\n      dup1\n      dup3\n      iszero\n      iszero\n      iszero\n      iszero\n      dup2\n      mstore\n      0x20\n      add\n      swap2\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":446:794  function donate(uint256 etherAmount) public payable {... */\n    tag_5:\n      tag_16\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_17)\n    tag_16:\n      stop\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":143:170  Donation[] public donations */\n    tag_6:\n      callvalue\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_18\n      jumpi\n        /* \"--CODEGEN--\":30:31   */\n      0x0\n        /* \"--CODEGEN--\":27:28   */\n      dup1\n        /* \"--CODEGEN--\":20:32   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_18:\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":143:170  Donation[] public donations */\n      pop\n      tag_19\n      0x4\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      dup1\n      dup1\n      calldataload\n      swap1\n      0x20\n      add\n      swap1\n      swap3\n      swap2\n      swap1\n      pop\n      pop\n      pop\n      jump(tag_20)\n    tag_19:\n      mload(0x40)\n      dup1\n      dup4\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup2\n      mstore\n      0x20\n      add\n      swap3\n      pop\n      pop\n      pop\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":800:933  function withdraw() public {... */\n    tag_9:\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":859:864  owner */\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":845:864  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":845:855  msg.sender */\n      caller\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":845:864  msg.sender == owner */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":837:865  require(msg.sender == owner) */\n      iszero\n      iszero\n      tag_22\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_22:\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":884:894  msg.sender */\n      caller\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":884:903  msg.sender.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":884:926  msg.sender.transfer(address(this).balance) */\n      0x8fc\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":912:916  this */\n      address\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":904:925  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":884:926  msg.sender.transfer(address(this).balance) */\n      swap1\n      dup2\n      iszero\n      mul\n      swap1\n      mload(0x40)\n      0x0\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup9\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n        /* \"--CODEGEN--\":8:17   */\n      dup1\n        /* \"--CODEGEN--\":5:7   */\n      iszero\n      tag_23\n      jumpi\n        /* \"--CODEGEN--\":45:61   */\n      returndatasize\n        /* \"--CODEGEN--\":42:43   */\n      0x0\n        /* \"--CODEGEN--\":39:40   */\n      dup1\n        /* \"--CODEGEN--\":24:62   */\n      returndatacopy\n        /* \"--CODEGEN--\":77:93   */\n      returndatasize\n        /* \"--CODEGEN--\":74:75   */\n      0x0\n        /* \"--CODEGEN--\":67:94   */\n      revert\n        /* \"--CODEGEN--\":5:7   */\n    tag_23:\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":884:926  msg.sender.transfer(address(this).balance) */\n      pop\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":800:933  function withdraw() public {... */\n      jump\t// out\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":177:197  address public owner */\n    tag_12:\n      0x1\n      0x0\n      swap1\n      sload\n      swap1\n      0x100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":341:440  function isComplete() public view returns (bool) {... */\n    tag_15:\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":384:388  bool */\n      0x0\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":432:433  0 */\n      dup1\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":415:419  this */\n      address\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":407:428  address(this).balance */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      balance\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":407:433  address(this).balance == 0 */\n      eq\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":400:433  return address(this).balance == 0 */\n      swap1\n      pop\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":341:440  function isComplete() public view returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":446:794  function donate(uint256 etherAmount) public payable {... */\n    tag_17:\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":563:576  uint256 scale */\n      0x0\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":657:674  Donation donation */\n      dup1\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":579:595  10**18 * 1 ether */\n      0xc097ce7bc90715b34b9f1000000000\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":563:595  uint256 scale = 10**18 * 1 ether */\n      swap2\n      pop\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":640:645  scale */\n      dup2\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":626:637  etherAmount */\n      dup4\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":626:645  etherAmount / scale */\n      dup2\n      iszero\n      iszero\n      tag_26\n      jumpi\n      invalid\n    tag_26:\n      div\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":613:622  msg.value */\n      callvalue\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":613:645  msg.value == etherAmount / scale */\n      eq\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":605:646  require(msg.value == etherAmount / scale) */\n      iszero\n      iszero\n      tag_27\n      jumpi\n      0x0\n      dup1\n      revert\n    tag_27:\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":705:708  now */\n      timestamp\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":684:692  donation */\n      dup2\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":684:702  donation.timestamp */\n      0x0\n      add\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":684:708  donation.timestamp = now */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":741:752  etherAmount */\n      dup3\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":718:726  donation */\n      dup2\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":718:738  donation.etherAmount */\n      0x1\n      add\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":718:752  donation.etherAmount = etherAmount */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":763:772  donations */\n      0x0\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":778:786  donation */\n      dup2\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":763:787  donations.push(donation) */\n      swap1\n      dup1\n        /* \"--CODEGEN--\":39:40   */\n      0x1\n        /* \"--CODEGEN--\":33:36   */\n      dup2\n        /* \"--CODEGEN--\":27:37   */\n      sload\n        /* \"--CODEGEN--\":23:41   */\n      add\n        /* \"--CODEGEN--\":57:67   */\n      dup1\n        /* \"--CODEGEN--\":52:55   */\n      dup3\n        /* \"--CODEGEN--\":45:68   */\n      sstore\n        /* \"--CODEGEN--\":79:89   */\n      dup1\n        /* \"--CODEGEN--\":72:89   */\n      swap2\n      pop\n        /* \"--CODEGEN--\":0:93   */\n      pop\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":763:787  donations.push(donation) */\n      swap1\n      0x1\n      dup3\n      sub\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      0x2\n      mul\n      add\n      0x0\n      swap1\n      swap2\n      swap3\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      0x0\n      dup3\n      add\n      sload\n      dup2\n      0x0\n      add\n      sstore\n      0x1\n      dup3\n      add\n      sload\n      dup2\n      0x1\n      add\n      sstore\n      pop\n      pop\n      pop\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":446:794  function donate(uint256 etherAmount) public payable {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":143:170  Donation[] public donations */\n    tag_20:\n      0x0\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      iszero\n      iszero\n      tag_29\n      jumpi\n      invalid\n    tag_29:\n      swap1\n      0x0\n      mstore\n      keccak256(0x0, 0x20)\n      swap1\n      0x2\n      mul\n      add\n      0x0\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x0\n      add\n      sload\n      swap1\n      dup1\n      0x1\n      add\n      sload\n      swap1\n      pop\n      dup3\n      jump\t// out\n\n    auxdata: 0xa165627a7a72305820592ee2452540daed7fbc49705ec2221824d380393f8dc96aa9d800084e6073330029\n}\n",
						"bytecode": {
							"linkReferences": {},
							"object": "6080604052670de0b6b3a76400003414151561001a57600080fd5b33600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506103638061006a6000396000f30060806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633ccfd60b146100725780638da5cb5b14610089578063b2fa1c9e146100e0578063f14faf6f1461010f578063f8626af81461012f575b600080fd5b34801561007e57600080fd5b50610087610177565b005b34801561009557600080fd5b5061009e610233565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100ec57600080fd5b506100f5610259565b604051808215151515815260200191505060405180910390f35b61012d6004803603810190808035906020019092919050505061027a565b005b34801561013b57600080fd5b5061015a60048036038101908080359060200190929190505050610304565b604051808381526020018281526020019250505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101d357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610230573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000803073ffffffffffffffffffffffffffffffffffffffff163114905090565b6000806ec097ce7bc90715b34b9f10000000009150818381151561029a57fe5b04341415156102a857600080fd5b428160000181905550828160010181905550600081908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820154816000015560018201548160010155505050505050565b60008181548110151561031357fe5b906000526020600020906002020160009150905080600001549080600101549050825600a165627a7a72305820592ee2452540daed7fbc49705ec2221824d380393f8dc96aa9d800084e6073330029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH8 0xDE0B6B3A7640000 CALLVALUE EQ ISZERO ISZERO PUSH2 0x1A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x363 DUP1 PUSH2 0x6A PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN STOP PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xF14FAF6F EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xF8626AF8 EQ PUSH2 0x12F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x230 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH15 0xC097CE7BC90715B34B9F1000000000 SWAP2 POP DUP2 DUP4 DUP2 ISZERO ISZERO PUSH2 0x29A JUMPI INVALID JUMPDEST DIV CALLVALUE EQ ISZERO ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MSIZE 0x2e 0xe2 GASLIMIT 0x25 BLOCKHASH 0xda 0xed PUSH32 0xBC49705EC2221824D380393F8DC96AA9D800084E607333002900000000000000 ",
							"sourceMap": "26:909:0:-;;;279:7;266:9;:20;258:29;;;;;;;;314:10;306:5;;:18;;;;;;;;;;;;;;;;;;26:909;;;;;;"
						},
						"deployedBytecode": {
							"linkReferences": {},
							"object": "60806040526004361061006d576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680633ccfd60b146100725780638da5cb5b14610089578063b2fa1c9e146100e0578063f14faf6f1461010f578063f8626af81461012f575b600080fd5b34801561007e57600080fd5b50610087610177565b005b34801561009557600080fd5b5061009e610233565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b3480156100ec57600080fd5b506100f5610259565b604051808215151515815260200191505060405180910390f35b61012d6004803603810190808035906020019092919050505061027a565b005b34801561013b57600080fd5b5061015a60048036038101908080359060200190929190505050610304565b604051808381526020018281526020019250505060405180910390f35b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156101d357600080fd5b3373ffffffffffffffffffffffffffffffffffffffff166108fc3073ffffffffffffffffffffffffffffffffffffffff16319081150290604051600060405180830381858888f19350505050158015610230573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000803073ffffffffffffffffffffffffffffffffffffffff163114905090565b6000806ec097ce7bc90715b34b9f10000000009150818381151561029a57fe5b04341415156102a857600080fd5b428160000181905550828160010181905550600081908060018154018082558091505090600182039060005260206000209060020201600090919290919091506000820154816000015560018201548160010155505050505050565b60008181548110151561031357fe5b906000526020600020906002020160009150905080600001549080600101549050825600a165627a7a72305820592ee2452540daed7fbc49705ec2221824d380393f8dc96aa9d800084e6073330029",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x6D JUMPI PUSH1 0x0 CALLDATALOAD PUSH29 0x100000000000000000000000000000000000000000000000000000000 SWAP1 DIV PUSH4 0xFFFFFFFF AND DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x72 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x89 JUMPI DUP1 PUSH4 0xB2FA1C9E EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0xF14FAF6F EQ PUSH2 0x10F JUMPI DUP1 PUSH4 0xF8626AF8 EQ PUSH2 0x12F JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x7E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x87 PUSH2 0x177 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x95 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x9E PUSH2 0x233 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF5 PUSH2 0x259 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP3 ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD SWAP2 POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x12D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x27A JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x15A PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 DUP1 DUP1 CALLDATALOAD SWAP1 PUSH1 0x20 ADD SWAP1 SWAP3 SWAP2 SWAP1 POP POP POP PUSH2 0x304 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP2 MSTORE PUSH1 0x20 ADD SWAP3 POP POP POP PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x230 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH1 0x0 DUP1 ADDRESS PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND BALANCE EQ SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH15 0xC097CE7BC90715B34B9F1000000000 SWAP2 POP DUP2 DUP4 DUP2 ISZERO ISZERO PUSH2 0x29A JUMPI INVALID JUMPDEST DIV CALLVALUE EQ ISZERO ISZERO PUSH2 0x2A8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST TIMESTAMP DUP2 PUSH1 0x0 ADD DUP2 SWAP1 SSTORE POP DUP3 DUP2 PUSH1 0x1 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x0 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP SWAP1 PUSH1 0x1 DUP3 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP3 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD SLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 PUSH1 0x1 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT ISZERO ISZERO PUSH2 0x313 JUMPI INVALID JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 SWAP2 POP SWAP1 POP DUP1 PUSH1 0x0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 POP DUP3 JUMP STOP LOG1 PUSH6 0x627A7A723058 KECCAK256 MSIZE 0x2e 0xe2 GASLIMIT 0x25 BLOCKHASH 0xda 0xed PUSH32 0xBC49705EC2221824D380393F8DC96AA9D800084E607333002900000000000000 ",
							"sourceMap": "26:909:0:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;800:133;;8:9:-1;5:2;;;30:1;27;20:12;5:2;800:133:0;;;;;;177:20;;8:9:-1;5:2;;;30:1;27;20:12;5:2;177:20:0;;;;;;;;;;;;;;;;;;;;;;;;;;;341:99;;8:9:-1;5:2;;;30:1;27;20:12;5:2;341:99:0;;;;;;;;;;;;;;;;;;;;;;;;;;;446:348;;;;;;;;;;;;;;;;;;;;;;;;;;143:27;;8:9:-1;5:2;;;30:1;27;20:12;5:2;143:27:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;800:133;859:5;;;;;;;;;;;845:19;;:10;:19;;;837:28;;;;;;;;884:10;:19;;:42;912:4;904:21;;;884:42;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;884:42:0;800:133::o;177:20::-;;;;;;;;;;;;;:::o;341:99::-;384:4;432:1;415:4;407:21;;;:26;400:33;;341:99;:::o;446:348::-;563:13;657:17;579:16;563:32;;640:5;626:11;:19;;;;;;;;613:9;:32;605:41;;;;;;;;705:3;684:8;:18;;:24;;;;741:11;718:8;:20;;:34;;;;763:9;778:8;763:24;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;763:24:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;446:348;;;:::o;143:27::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "173400",
								"executionCost": "20490",
								"totalCost": "193890"
							},
							"external": {
								"donate(uint256)": "101131",
								"donations(uint256)": "1094",
								"isComplete()": "669",
								"owner()": "464",
								"withdraw()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 26,
									"end": 935,
									"name": "PUSH",
									"value": "80"
								},
								{
									"begin": 26,
									"end": 935,
									"name": "PUSH",
									"value": "40"
								},
								{
									"begin": 26,
									"end": 935,
									"name": "MSTORE"
								},
								{
									"begin": 279,
									"end": 286,
									"name": "PUSH",
									"value": "DE0B6B3A7640000"
								},
								{
									"begin": 266,
									"end": 275,
									"name": "CALLVALUE"
								},
								{
									"begin": 266,
									"end": 286,
									"name": "EQ"
								},
								{
									"begin": 258,
									"end": 287,
									"name": "ISZERO"
								},
								{
									"begin": 258,
									"end": 287,
									"name": "ISZERO"
								},
								{
									"begin": 258,
									"end": 287,
									"name": "PUSH [tag]",
									"value": "3"
								},
								{
									"begin": 258,
									"end": 287,
									"name": "JUMPI"
								},
								{
									"begin": 258,
									"end": 287,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 258,
									"end": 287,
									"name": "DUP1"
								},
								{
									"begin": 258,
									"end": 287,
									"name": "REVERT"
								},
								{
									"begin": 258,
									"end": 287,
									"name": "tag",
									"value": "3"
								},
								{
									"begin": 258,
									"end": 287,
									"name": "JUMPDEST"
								},
								{
									"begin": 314,
									"end": 324,
									"name": "CALLER"
								},
								{
									"begin": 306,
									"end": 311,
									"name": "PUSH",
									"value": "1"
								},
								{
									"begin": 306,
									"end": 311,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "PUSH",
									"value": "100"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "EXP"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "SLOAD"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "DUP2"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "MUL"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "NOT"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "AND"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "SWAP1"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "DUP4"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "PUSH",
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "AND"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "MUL"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "OR"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "SWAP1"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "SSTORE"
								},
								{
									"begin": 306,
									"end": 324,
									"name": "POP"
								},
								{
									"begin": 26,
									"end": 935,
									"name": "PUSH #[$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 935,
									"name": "DUP1"
								},
								{
									"begin": 26,
									"end": 935,
									"name": "PUSH [$]",
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 26,
									"end": 935,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 935,
									"name": "CODECOPY"
								},
								{
									"begin": 26,
									"end": 935,
									"name": "PUSH",
									"value": "0"
								},
								{
									"begin": 26,
									"end": 935,
									"name": "RETURN"
								}
							],
							".data": {
								"0": {
									".auxdata": "a165627a7a72305820592ee2452540daed7fbc49705ec2221824d380393f8dc96aa9d800084e6073330029",
									".code": [
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH",
											"value": "80"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "MSTORE"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "LT"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH",
											"value": "100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "SWAP1"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "DIV"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH",
											"value": "FFFFFFFF"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "AND"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH",
											"value": "3CCFD60B"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "2"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH",
											"value": "8DA5CB5B"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "3"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH",
											"value": "B2FA1C9E"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "4"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH",
											"value": "F14FAF6F"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "5"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH",
											"value": "F8626AF8"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "EQ"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH [tag]",
											"value": "6"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "JUMPI"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "tag",
											"value": "1"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "JUMPDEST"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "DUP1"
										},
										{
											"begin": 26,
											"end": 935,
											"name": "REVERT"
										},
										{
											"begin": 800,
											"end": 933,
											"name": "tag",
											"value": "2"
										},
										{
											"begin": 800,
											"end": 933,
											"name": "JUMPDEST"
										},
										{
											"begin": 800,
											"end": 933,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "7"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 800,
											"end": 933,
											"name": "POP"
										},
										{
											"begin": 800,
											"end": 933,
											"name": "PUSH [tag]",
											"value": "8"
										},
										{
											"begin": 800,
											"end": 933,
											"name": "PUSH [tag]",
											"value": "9"
										},
										{
											"begin": 800,
											"end": 933,
											"name": "JUMP"
										},
										{
											"begin": 800,
											"end": 933,
											"name": "tag",
											"value": "8"
										},
										{
											"begin": 800,
											"end": 933,
											"name": "JUMPDEST"
										},
										{
											"begin": 800,
											"end": 933,
											"name": "STOP"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "tag",
											"value": "3"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "10"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH [tag]",
											"value": "11"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH [tag]",
											"value": "12"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "JUMP"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "tag",
											"value": "11"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "DUP3"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "MSTORE"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "ADD"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "SWAP2"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "POP"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "MLOAD"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "DUP1"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "SWAP2"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "SUB"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "RETURN"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "tag",
											"value": "4"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "JUMPDEST"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "13"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "POP"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "PUSH [tag]",
											"value": "14"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "PUSH [tag]",
											"value": "15"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "JUMP"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "tag",
											"value": "14"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "JUMPDEST"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "MLOAD"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "DUP3"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "ISZERO"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "ISZERO"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "ISZERO"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "ISZERO"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "DUP2"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "MSTORE"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "ADD"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "SWAP2"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "POP"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "POP"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "MLOAD"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "DUP1"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "SWAP2"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "SUB"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "SWAP1"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "RETURN"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "tag",
											"value": "5"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "JUMPDEST"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "16"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "SUB"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "DUP2"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "ADD"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "SWAP1"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "DUP1"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "SWAP1"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "ADD"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "SWAP1"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "SWAP3"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "SWAP2"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "SWAP1"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "POP"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "POP"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "POP"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "PUSH [tag]",
											"value": "17"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "JUMP"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "tag",
											"value": "16"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "JUMPDEST"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "STOP"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "tag",
											"value": "6"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "JUMPDEST"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "CALLVALUE"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 30,
											"end": 31,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 27,
											"end": 28,
											"name": "DUP1"
										},
										{
											"begin": 20,
											"end": 32,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "18"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH [tag]",
											"value": "19"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH",
											"value": "4"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "CALLDATASIZE"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SUB"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP2"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "ADD"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "CALLDATALOAD"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "ADD"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP3"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP2"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH [tag]",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "JUMP"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "tag",
											"value": "19"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "JUMPDEST"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "MLOAD"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP4"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP2"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "MSTORE"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "ADD"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP3"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP2"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "MSTORE"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "ADD"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP3"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "MLOAD"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP2"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SUB"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "RETURN"
										},
										{
											"begin": 800,
											"end": 933,
											"name": "tag",
											"value": "9"
										},
										{
											"begin": 800,
											"end": 933,
											"name": "JUMPDEST"
										},
										{
											"begin": 859,
											"end": 864,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 859,
											"end": 864,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 859,
											"end": 864,
											"name": "SWAP1"
										},
										{
											"begin": 859,
											"end": 864,
											"name": "SLOAD"
										},
										{
											"begin": 859,
											"end": 864,
											"name": "SWAP1"
										},
										{
											"begin": 859,
											"end": 864,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 859,
											"end": 864,
											"name": "EXP"
										},
										{
											"begin": 859,
											"end": 864,
											"name": "SWAP1"
										},
										{
											"begin": 859,
											"end": 864,
											"name": "DIV"
										},
										{
											"begin": 859,
											"end": 864,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 859,
											"end": 864,
											"name": "AND"
										},
										{
											"begin": 845,
											"end": 864,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 845,
											"end": 864,
											"name": "AND"
										},
										{
											"begin": 845,
											"end": 855,
											"name": "CALLER"
										},
										{
											"begin": 845,
											"end": 864,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 845,
											"end": 864,
											"name": "AND"
										},
										{
											"begin": 845,
											"end": 864,
											"name": "EQ"
										},
										{
											"begin": 837,
											"end": 865,
											"name": "ISZERO"
										},
										{
											"begin": 837,
											"end": 865,
											"name": "ISZERO"
										},
										{
											"begin": 837,
											"end": 865,
											"name": "PUSH [tag]",
											"value": "22"
										},
										{
											"begin": 837,
											"end": 865,
											"name": "JUMPI"
										},
										{
											"begin": 837,
											"end": 865,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 837,
											"end": 865,
											"name": "DUP1"
										},
										{
											"begin": 837,
											"end": 865,
											"name": "REVERT"
										},
										{
											"begin": 837,
											"end": 865,
											"name": "tag",
											"value": "22"
										},
										{
											"begin": 837,
											"end": 865,
											"name": "JUMPDEST"
										},
										{
											"begin": 884,
											"end": 894,
											"name": "CALLER"
										},
										{
											"begin": 884,
											"end": 903,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 884,
											"end": 903,
											"name": "AND"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "PUSH",
											"value": "8FC"
										},
										{
											"begin": 912,
											"end": 916,
											"name": "ADDRESS"
										},
										{
											"begin": 904,
											"end": 925,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 904,
											"end": 925,
											"name": "AND"
										},
										{
											"begin": 904,
											"end": 925,
											"name": "BALANCE"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "SWAP1"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "DUP2"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "ISZERO"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "MUL"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "SWAP1"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "MLOAD"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "PUSH",
											"value": "40"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "MLOAD"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "DUP1"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "DUP4"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "SUB"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "DUP2"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "DUP6"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "DUP9"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "DUP9"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "CALL"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "SWAP4"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "POP"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "POP"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "POP"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "POP"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "ISZERO"
										},
										{
											"begin": 8,
											"end": 17,
											"name": "DUP1"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "ISZERO"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "PUSH [tag]",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPI"
										},
										{
											"begin": 45,
											"end": 61,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 42,
											"end": 43,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "DUP1"
										},
										{
											"begin": 24,
											"end": 62,
											"name": "RETURNDATACOPY"
										},
										{
											"begin": 77,
											"end": 93,
											"name": "RETURNDATASIZE"
										},
										{
											"begin": 74,
											"end": 75,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 67,
											"end": 94,
											"name": "REVERT"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "tag",
											"value": "23"
										},
										{
											"begin": 5,
											"end": 7,
											"name": "JUMPDEST"
										},
										{
											"begin": 884,
											"end": 926,
											"name": "POP"
										},
										{
											"begin": 800,
											"end": 933,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "tag",
											"value": "12"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "JUMPDEST"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "SLOAD"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH",
											"value": "100"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "EXP"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "SWAP1"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "DIV"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "AND"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "DUP2"
										},
										{
											"begin": 177,
											"end": 197,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "tag",
											"value": "15"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "JUMPDEST"
										},
										{
											"begin": 384,
											"end": 388,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 432,
											"end": 433,
											"name": "DUP1"
										},
										{
											"begin": 415,
											"end": 419,
											"name": "ADDRESS"
										},
										{
											"begin": 407,
											"end": 428,
											"name": "PUSH",
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 407,
											"end": 428,
											"name": "AND"
										},
										{
											"begin": 407,
											"end": 428,
											"name": "BALANCE"
										},
										{
											"begin": 407,
											"end": 433,
											"name": "EQ"
										},
										{
											"begin": 400,
											"end": 433,
											"name": "SWAP1"
										},
										{
											"begin": 400,
											"end": 433,
											"name": "POP"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "SWAP1"
										},
										{
											"begin": 341,
											"end": 440,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "tag",
											"value": "17"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "JUMPDEST"
										},
										{
											"begin": 563,
											"end": 576,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 657,
											"end": 674,
											"name": "DUP1"
										},
										{
											"begin": 579,
											"end": 595,
											"name": "PUSH",
											"value": "C097CE7BC90715B34B9F1000000000"
										},
										{
											"begin": 563,
											"end": 595,
											"name": "SWAP2"
										},
										{
											"begin": 563,
											"end": 595,
											"name": "POP"
										},
										{
											"begin": 640,
											"end": 645,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 637,
											"name": "DUP4"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "DUP2"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "ISZERO"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "ISZERO"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "PUSH [tag]",
											"value": "26"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMPI"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "INVALID"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "tag",
											"value": "26"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "JUMPDEST"
										},
										{
											"begin": 626,
											"end": 645,
											"name": "DIV"
										},
										{
											"begin": 613,
											"end": 622,
											"name": "CALLVALUE"
										},
										{
											"begin": 613,
											"end": 645,
											"name": "EQ"
										},
										{
											"begin": 605,
											"end": 646,
											"name": "ISZERO"
										},
										{
											"begin": 605,
											"end": 646,
											"name": "ISZERO"
										},
										{
											"begin": 605,
											"end": 646,
											"name": "PUSH [tag]",
											"value": "27"
										},
										{
											"begin": 605,
											"end": 646,
											"name": "JUMPI"
										},
										{
											"begin": 605,
											"end": 646,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 605,
											"end": 646,
											"name": "DUP1"
										},
										{
											"begin": 605,
											"end": 646,
											"name": "REVERT"
										},
										{
											"begin": 605,
											"end": 646,
											"name": "tag",
											"value": "27"
										},
										{
											"begin": 605,
											"end": 646,
											"name": "JUMPDEST"
										},
										{
											"begin": 705,
											"end": 708,
											"name": "TIMESTAMP"
										},
										{
											"begin": 684,
											"end": 692,
											"name": "DUP2"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 684,
											"end": 702,
											"name": "ADD"
										},
										{
											"begin": 684,
											"end": 708,
											"name": "DUP2"
										},
										{
											"begin": 684,
											"end": 708,
											"name": "SWAP1"
										},
										{
											"begin": 684,
											"end": 708,
											"name": "SSTORE"
										},
										{
											"begin": 684,
											"end": 708,
											"name": "POP"
										},
										{
											"begin": 741,
											"end": 752,
											"name": "DUP3"
										},
										{
											"begin": 718,
											"end": 726,
											"name": "DUP2"
										},
										{
											"begin": 718,
											"end": 738,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 718,
											"end": 738,
											"name": "ADD"
										},
										{
											"begin": 718,
											"end": 752,
											"name": "DUP2"
										},
										{
											"begin": 718,
											"end": 752,
											"name": "SWAP1"
										},
										{
											"begin": 718,
											"end": 752,
											"name": "SSTORE"
										},
										{
											"begin": 718,
											"end": 752,
											"name": "POP"
										},
										{
											"begin": 763,
											"end": 772,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 778,
											"end": 786,
											"name": "DUP2"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "DUP1"
										},
										{
											"begin": 39,
											"end": 40,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 33,
											"end": 36,
											"name": "DUP2"
										},
										{
											"begin": 27,
											"end": 37,
											"name": "SLOAD"
										},
										{
											"begin": 23,
											"end": 41,
											"name": "ADD"
										},
										{
											"begin": 57,
											"end": 67,
											"name": "DUP1"
										},
										{
											"begin": 52,
											"end": 55,
											"name": "DUP3"
										},
										{
											"begin": 45,
											"end": 68,
											"name": "SSTORE"
										},
										{
											"begin": 79,
											"end": 89,
											"name": "DUP1"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "SWAP2"
										},
										{
											"begin": 72,
											"end": 89,
											"name": "POP"
										},
										{
											"begin": 0,
											"end": 93,
											"name": "POP"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "DUP3"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SUB"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "MSTORE"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "KECCAK256"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "MUL"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "ADD"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SWAP2"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SWAP3"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SWAP2"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SWAP1"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SWAP2"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "POP"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "DUP3"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "ADD"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SLOAD"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "DUP2"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "ADD"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SSTORE"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "DUP3"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "ADD"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SLOAD"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "DUP2"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "ADD"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "SSTORE"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "POP"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "POP"
										},
										{
											"begin": 763,
											"end": 787,
											"name": "POP"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "POP"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "POP"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "POP"
										},
										{
											"begin": 446,
											"end": 794,
											"name": "JUMP",
											"value": "[out]"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "tag",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "JUMPDEST"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP2"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP2"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SLOAD"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP2"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "LT"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "ISZERO"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "ISZERO"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH [tag]",
											"value": "29"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "JUMPI"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "INVALID"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "tag",
											"value": "29"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "JUMPDEST"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "MSTORE"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH",
											"value": "20"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "KECCAK256"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH",
											"value": "2"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "MUL"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "ADD"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP2"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH",
											"value": "0"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "ADD"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SLOAD"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "PUSH",
											"value": "1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "ADD"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SLOAD"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "SWAP1"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "POP"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "DUP3"
										},
										{
											"begin": 143,
											"end": 170,
											"name": "JUMP",
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"donate(uint256)": "f14faf6f",
							"donations(uint256)": "f8626af8",
							"isComplete()": "b2fa1c9e",
							"owner()": "8da5cb5b",
							"withdraw()": "3ccfd60b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.4.26+commit.4563c3fc\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isComplete\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"etherAmount\",\"type\":\"uint256\"}],\"name\":\"donate\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"donations\",\"outputs\":[{\"name\":\"timestamp\",\"type\":\"uint256\"},{\"name\":\"etherAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"constructor\"}],\"devdoc\":{\"methods\":{}},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":\"DonationChallenge\"},\"evmVersion\":\"byzantium\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol\":{\"keccak256\":\"0x9bdb193d9f4932ac4ef4633f4488f267891a2aa11f01e06fc494c71f1edabcdf\",\"urls\":[\"bzzr://031d1505b009a3c53b3f3fe46518da5344fa2ed5e0ff53fd9e4573009e981959\"]}},\"version\":1}",
					"userdoc": {
						"methods": {}
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"formattedMessage": "practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol:12:5: Warning: Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.\n    function DonationChallenge() public payable {\n    ^ (Relevant source part starts here and spans across multiple lines).\n",
				"message": "Defining constructors as functions with the same name as the contract is deprecated. Use \"constructor(...) { ... }\" instead.",
				"severity": "warning",
				"sourceLocation": {
					"end": 331,
					"file": "practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol",
					"start": 204
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol:27:9: Warning: Variable is declared as a storage pointer. Use an explicit \"storage\" keyword to silence this warning.\n        Donation donation;\n        ^---------------^\n",
				"message": "Variable is declared as a storage pointer. Use an explicit \"storage\" keyword to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 674,
					"file": "practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol",
					"start": 657
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"formattedMessage": "practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol:27:9: Warning: Uninitialized storage pointer. Did you mean '<type> memory donation'?\n        Donation donation;\n        ^---------------^\n",
				"message": "Uninitialized storage pointer. Did you mean '<type> memory donation'?",
				"severity": "warning",
				"sourceLocation": {
					"end": 674,
					"file": "practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol",
					"start": 657
				},
				"type": "Warning"
			}
		],
		"sources": {
			"practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol": {
				"ast": {
					"absolutePath": "practice/web3/CTFS/captureTheEther/math/Donation/contracts/Donation.sol",
					"exportedSymbols": {
						"DonationChallenge": [
							107
						]
					},
					"id": 108,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.4",
								".21"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": null,
							"fullyImplemented": true,
							"id": 107,
							"linearizedBaseContracts": [
								107
							],
							"name": "DonationChallenge",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "DonationChallenge.Donation",
									"id": 6,
									"members": [
										{
											"constant": false,
											"id": 3,
											"name": "timestamp",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "85:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "85:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 5,
											"name": "etherAmount",
											"nodeType": "VariableDeclaration",
											"scope": 6,
											"src": "112:19:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 4,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "112:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"value": null,
											"visibility": "internal"
										}
									],
									"name": "Donation",
									"nodeType": "StructDefinition",
									"scope": 107,
									"src": "59:79:0",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 9,
									"name": "donations",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "143:27:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Donation_$6_storage_$dyn_storage",
										"typeString": "struct DonationChallenge.Donation[]"
									},
									"typeName": {
										"baseType": {
											"contractScope": null,
											"id": 7,
											"name": "Donation",
											"nodeType": "UserDefinedTypeName",
											"referencedDeclaration": 6,
											"src": "143:8:0",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Donation_$6_storage_ptr",
												"typeString": "struct DonationChallenge.Donation"
											}
										},
										"id": 8,
										"length": null,
										"nodeType": "ArrayTypeName",
										"src": "143:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Donation_$6_storage_$dyn_storage_ptr",
											"typeString": "struct DonationChallenge.Donation[]"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 11,
									"name": "owner",
									"nodeType": "VariableDeclaration",
									"scope": 107,
									"src": "177:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 10,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "177:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 26,
										"nodeType": "Block",
										"src": "248:83:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 18,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 15,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "266:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 16,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "266:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"hexValue": "31",
																"id": 17,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "279:7:0",
																"subdenomination": "ether",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1000000000000000000_by_1",
																	"typeString": "int_const 1000000000000000000"
																},
																"value": "1"
															},
															"src": "266:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 14,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															125,
															126
														],
														"referencedDeclaration": 125,
														"src": "258:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 19,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "258:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 20,
												"nodeType": "ExpressionStatement",
												"src": "258:29:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 24,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"id": 21,
														"name": "owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "306:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 22,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 122,
															"src": "314:3:0",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 23,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "314:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "306:18:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 25,
												"nodeType": "ExpressionStatement",
												"src": "306:18:0"
											}
										]
									},
									"documentation": null,
									"id": 27,
									"implemented": true,
									"isConstructor": true,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "DonationChallenge",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "230:2:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "248:0:0"
									},
									"scope": 107,
									"src": "204:127:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "390:50:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 37,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"arguments": [
																{
																	"argumentTypes": null,
																	"id": 33,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 135,
																	"src": "415:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_DonationChallenge_$107",
																		"typeString": "contract DonationChallenge"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_DonationChallenge_$107",
																		"typeString": "contract DonationChallenge"
																	}
																],
																"id": 32,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "407:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": "address"
															},
															"id": 34,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "407:13:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 35,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "407:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "30",
														"id": 36,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "432:1:0",
														"subdenomination": null,
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "407:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 31,
												"id": 38,
												"nodeType": "Return",
												"src": "400:33:0"
											}
										]
									},
									"documentation": null,
									"id": 40,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": true,
									"modifiers": [],
									"name": "isComplete",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "360:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"name": "",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "384:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "384:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "383:6:0"
									},
									"scope": 107,
									"src": "341:99:0",
									"stateMutability": "view",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "498:296:0",
										"statements": [
											{
												"assignments": [
													46
												],
												"declarations": [
													{
														"constant": false,
														"id": 46,
														"name": "scale",
														"nodeType": "VariableDeclaration",
														"scope": 84,
														"src": "563:13:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 45,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "563:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 52,
												"initialValue": {
													"argumentTypes": null,
													"commonType": {
														"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
														"typeString": "int_const 1000...(29 digits omitted)...0000"
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"leftExpression": {
														"argumentTypes": null,
														"commonType": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"id": 49,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"leftExpression": {
															"argumentTypes": null,
															"hexValue": "3130",
															"id": 47,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "579:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_10_by_1",
																"typeString": "int_const 10"
															},
															"value": "10"
														},
														"nodeType": "BinaryOperation",
														"operator": "**",
														"rightExpression": {
															"argumentTypes": null,
															"hexValue": "3138",
															"id": 48,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "583:2:0",
															"subdenomination": null,
															"typeDescriptions": {
																"typeIdentifier": "t_rational_18_by_1",
																"typeString": "int_const 18"
															},
															"value": "18"
														},
														"src": "579:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"argumentTypes": null,
														"hexValue": "31",
														"id": 50,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "588:7:0",
														"subdenomination": "ether",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1000000000000000000_by_1",
															"typeString": "int_const 1000000000000000000"
														},
														"value": "1"
													},
													"src": "579:16:0",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_1000000000000000000000000000000000000_by_1",
														"typeString": "int_const 1000...(29 digits omitted)...0000"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "563:32:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 59,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 54,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "613:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 55,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "613:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 58,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"argumentTypes": null,
																	"id": 56,
																	"name": "etherAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 42,
																	"src": "626:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"argumentTypes": null,
																	"id": 57,
																	"name": "scale",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 46,
																	"src": "640:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "626:19:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "613:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 53,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															125,
															126
														],
														"referencedDeclaration": 125,
														"src": "605:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 60,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "605:41:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 61,
												"nodeType": "ExpressionStatement",
												"src": "605:41:0"
											},
											{
												"assignments": [],
												"declarations": [
													{
														"constant": false,
														"id": 63,
														"name": "donation",
														"nodeType": "VariableDeclaration",
														"scope": 84,
														"src": "657:17:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Donation_$6_storage_ptr",
															"typeString": "struct DonationChallenge.Donation"
														},
														"typeName": {
															"contractScope": null,
															"id": 62,
															"name": "Donation",
															"nodeType": "UserDefinedTypeName",
															"referencedDeclaration": 6,
															"src": "657:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Donation_$6_storage_ptr",
																"typeString": "struct DonationChallenge.Donation"
															}
														},
														"value": null,
														"visibility": "internal"
													}
												],
												"id": 64,
												"initialValue": null,
												"nodeType": "VariableDeclarationStatement",
												"src": "657:17:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 69,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 65,
															"name": "donation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "684:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Donation_$6_storage_ptr",
																"typeString": "struct DonationChallenge.Donation storage pointer"
															}
														},
														"id": 67,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3,
														"src": "684:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 68,
														"name": "now",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 124,
														"src": "705:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "684:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 70,
												"nodeType": "ExpressionStatement",
												"src": "684:24:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"argumentTypes": null,
														"expression": {
															"argumentTypes": null,
															"id": 71,
															"name": "donation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "718:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Donation_$6_storage_ptr",
																"typeString": "struct DonationChallenge.Donation storage pointer"
															}
														},
														"id": 73,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberName": "etherAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 5,
														"src": "718:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"argumentTypes": null,
														"id": 74,
														"name": "etherAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 42,
														"src": "741:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "718:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 76,
												"nodeType": "ExpressionStatement",
												"src": "718:34:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"id": 80,
															"name": "donation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "778:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Donation_$6_storage_ptr",
																"typeString": "struct DonationChallenge.Donation storage pointer"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Donation_$6_storage_ptr",
																"typeString": "struct DonationChallenge.Donation storage pointer"
															}
														],
														"expression": {
															"argumentTypes": null,
															"id": 77,
															"name": "donations",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 9,
															"src": "763:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Donation_$6_storage_$dyn_storage",
																"typeString": "struct DonationChallenge.Donation storage ref[] storage ref"
															}
														},
														"id": 79,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "763:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_struct$_Donation_$6_storage_$returns$_t_uint256_$",
															"typeString": "function (struct DonationChallenge.Donation storage ref) returns (uint256)"
														}
													},
													"id": 81,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "763:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 82,
												"nodeType": "ExpressionStatement",
												"src": "763:24:0"
											}
										]
									},
									"documentation": null,
									"id": 84,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "donate",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"name": "etherAmount",
												"nodeType": "VariableDeclaration",
												"scope": 84,
												"src": "462:19:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 41,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "462:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"value": null,
												"visibility": "internal"
											}
										],
										"src": "461:21:0"
									},
									"payable": true,
									"returnParameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "498:0:0"
									},
									"scope": 107,
									"src": "446:348:0",
									"stateMutability": "payable",
									"superFunction": null,
									"visibility": "public"
								},
								{
									"body": {
										"id": 105,
										"nodeType": "Block",
										"src": "827:106:0",
										"statements": [
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 91,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"argumentTypes": null,
																"expression": {
																	"argumentTypes": null,
																	"id": 88,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 122,
																	"src": "845:3:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 89,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"referencedDeclaration": null,
																"src": "845:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"argumentTypes": null,
																"id": 90,
																"name": "owner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 11,
																"src": "859:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "845:19:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 87,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															125,
															126
														],
														"referencedDeclaration": 125,
														"src": "837:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 92,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "837:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 93,
												"nodeType": "ExpressionStatement",
												"src": "837:28:0"
											},
											{
												"expression": {
													"argumentTypes": null,
													"arguments": [
														{
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"arguments": [
																	{
																		"argumentTypes": null,
																		"id": 100,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 135,
																		"src": "912:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_DonationChallenge_$107",
																			"typeString": "contract DonationChallenge"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_DonationChallenge_$107",
																			"typeString": "contract DonationChallenge"
																		}
																	],
																	"id": 99,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "904:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": "address"
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "904:13:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 102,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "904:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"argumentTypes": null,
															"expression": {
																"argumentTypes": null,
																"id": 94,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 122,
																"src": "884:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 97,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"referencedDeclaration": null,
															"src": "884:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 98,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": null,
														"src": "884:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "884:42:0",
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "884:42:0"
											}
										]
									},
									"documentation": null,
									"id": 106,
									"implemented": true,
									"isConstructor": false,
									"isDeclaredConst": false,
									"modifiers": [],
									"name": "withdraw",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "817:2:0"
									},
									"payable": false,
									"returnParameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "827:0:0"
									},
									"scope": 107,
									"src": "800:133:0",
									"stateMutability": "nonpayable",
									"superFunction": null,
									"visibility": "public"
								}
							],
							"scope": 108,
							"src": "26:909:0"
						}
					],
					"src": "0:935:0"
				},
				"id": 0
			}
		}
	}
}